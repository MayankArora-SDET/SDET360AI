version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: sdet360-postgres
    environment:
      POSTGRES_DB: mastersdet360
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    ports:
      - "5433:5432"  # Changed external port to 5433
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Proto Compiler Service (using a lightweight Python image)
  proto-compiler:
    image: python:3.11-alpine
    container_name: sdet360-proto-compiler
    volumes:
      - ./proto:/proto
      - ./springboot-service/src/main/java:/java-output
      - ./ai-service/app/generated:/python-output
    command: >
      /bin/sh -c "apk add --no-cache protoc && \
                  mkdir -p /java-output/com/sdet/sdet360/grpc/generated && \
                  protoc --java_out=/java-output \
                         --proto_path=/proto \
                         /proto/ai_service.proto && \
                  mkdir -p /python-output && \
                  touch /python-output/__init__.py && \
                  pip install --no-cache-dir grpcio-tools==1.58.0 && \
                  python3 -m grpc_tools.protoc \
                         -I=/proto \
                         --python_out=/python-output \
                         --grpc_python_out=/python-output \
                         /proto/ai_service.proto"

  # Spring Boot Service
  springboot-service:
    build:
      context: ./springboot-service
      dockerfile: Dockerfile
    container_name: sdet360-springboot
    depends_on:
      postgres:
        condition: service_healthy
      proto-compiler:
        condition: service_completed_successfully
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mastersdet360
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345
      FASTAPI_GRPC_HOST: ai-service
      FASTAPI_GRPC_PORT: 50051
    ports:
      - "8081:8080"  # Changed external port to 8081
    volumes:
      - ./springboot-service:/app

  # AI Service (FastAPI + gRPC)
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: sdet360-ai
    depends_on:
      proto-compiler:
        condition: service_completed_successfully
    ports:
      - "8001:8000"  # Changed external port to 8001  # FastAPI HTTP port
      - "50051:50051"  # gRPC port
    volumes:
      - ./ai-service:/app

  # Angular Frontend
  angular-frontend:
    build:
      context: ./SDETAIO
      dockerfile: Dockerfile
    container_name: sdet360-frontend
    ports:
      - "4201:80"  # Changed external port to 4201
    depends_on:
      - springboot-service

volumes:
  postgres-data:
